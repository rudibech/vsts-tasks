{
  "loc.friendlyName": "Maven",
  "loc.helpMarkDown": "[详细信息](https://go.microsoft.com/fwlink/?LinkID=613723)",
  "loc.description": "使用 Apache Maven 生成",
  "loc.instanceNameFormat": "Maven $(mavenPOMFile)",
  "loc.releaseNotes": "Configuration of the SonarQube analysis was moved to the [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) or [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) extensions, in task `Prepare Analysis Configuration`",
  "loc.group.displayName.junitTestResults": "JUnit 测试结果",
  "loc.group.displayName.codeCoverage": "代码覆盖率",
  "loc.group.displayName.advanced": "高级",
  "loc.group.displayName.CodeAnalysis": "代码分析",
  "loc.input.label.mavenPOMFile": "Maven POM 文件",
  "loc.input.help.mavenPOMFile": "从存储库根路径到 Maven POM 文件的相对路径。",
  "loc.input.label.goals": "目标",
  "loc.input.label.options": "选项",
  "loc.input.label.publishJUnitResults": "发布到 TFS/Team Services",
  "loc.input.help.publishJUnitResults": "选择此选项可将 Maven 生成产生的 JUnit 测试结果发布到 TFS/Team Services。每个与“测试结果文件”匹配的测试结果文件都会在 TFS/Team Services 中发布为测试运行。",
  "loc.input.label.testResultsFiles": "测试结果文件",
  "loc.input.help.testResultsFiles": "指定要发布的测试结果文件的路径和模式。例如，\"**/TEST-*.xml\" 表示名称以 \"TEST-\" 开头的所有 XML 文件。如果不指定根路径，会在默认工作目录下匹配文件，变量 $(System.DefaultWorkingDirectory) 将提供默认工作目录的值。例如，\"**/TEST-*.xml\" 值实际上会匹配 \"$(System.DefaultWorkingDirectory)/**/TEST-*.xml\" 中的文件。",
  "loc.input.label.testRunTitle": "测试运行标题",
  "loc.input.help.testRunTitle": "为测试运行提供一个名称。",
  "loc.input.label.codeCoverageTool": "Code coverage tool",
  "loc.input.help.codeCoverageTool": "选择代码覆盖率工具。",
  "loc.input.label.classFilter": "Class inclusion/exclusion filters",
  "loc.input.help.classFilter": "用于在收集代码覆盖率时包含或排除类的筛选器列表，以逗号分隔。例如: +:com.*、+:org.*、-:my.app*.*。",
  "loc.input.label.classFilesDirectories": "Class files directories",
  "loc.input.help.classFilesDirectories": "此字段是多模块项目的必填字段。指定从 Maven POM 文件到目录的相对路径的列表，以逗号分隔，其中目录包含类文件和存档文件(JAR 和 WAR 等)。报告这些目录中类文件的代码覆盖率。例如: target/classes,target/testClasses。",
  "loc.input.label.srcDirectories": "Source files directories",
  "loc.input.help.srcDirectories": "此字段是多模块项目的必需字段。指定从 Maven POM 文件到源代码目录的相对路径列表(以逗号分隔)。代码覆盖率报表将使用这些路径来突出显示源代码。例如: src/java,src/Test。",
  "loc.input.label.failIfCoverageEmpty": "Fail when code coverage results are missing",
  "loc.input.help.failIfCoverageEmpty": "如果代码覆盖率未产生任何要发布的结果，则生成将失败。",
  "loc.input.label.javaHomeSelection": "JAVA_HOME 设置方法",
  "loc.input.help.javaHomeSelection": "可通过选择将在生成期间发现的 JDK 版本或手动输入 JDK 路径来设置 JAVA_HOME。",
  "loc.input.label.jdkVersion": "JDK version",
  "loc.input.help.jdkVersion": "将尝试发现所选 JDK 版本的路径并相应地设置 JAVA_HOME。",
  "loc.input.label.jdkUserInputPath": "JDK path",
  "loc.input.help.jdkUserInputPath": "将 JAVA_HOME 设置到给定路径。",
  "loc.input.label.jdkArchitecture": "JDK architecture",
  "loc.input.help.jdkArchitecture": "可以选择提供 JDK 的体系结构(x86、x64)。",
  "loc.input.label.mavenVersionSelection": "Maven version",
  "loc.input.help.mavenVersionSelection": "使用默认的 Maven 版本或指定自定义路径下的版本。",
  "loc.input.label.mavenPath": "Maven path",
  "loc.input.help.mavenPath": "将自定义路径提供给 Maven 安装(如 /usr/share/maven)。",
  "loc.input.label.mavenSetM2Home": "设置 M2_HOME 变量",
  "loc.input.help.mavenSetM2Home": "将 M2_HOME 变量设置为自定义 Maven 安装路径。",
  "loc.input.label.mavenOpts": "将 MAVEN_OPTS 设置为",
  "loc.input.help.mavenOpts": "设置 MAVEN_OPTS 环境变量，此变量将用于发送命令行参数以启动 JVM。-Xmx 标志指定 JVM 可用的最大内存。",
  "loc.input.label.mavenFeedAuthenticate": "对内置 Maven 源进行身份验证",
  "loc.input.help.mavenFeedAuthenticate": "自动对 TFS/VSTS [包管理](https://marketplace.visualstudio.com/items?itemName=ms.feed)扩展中的内置 Maven 源进行身份验证。如果未使用内置 Maven 源，请取消选择该选项，以便更快生成。",
  "loc.input.label.sqAnalysisEnabled": "Run SonarQube or SonarCloud analysis",
  "loc.input.help.sqAnalysisEnabled": "This option has changed from version 1 of the **Maven** task to use the [SonarQube](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarqube) and [SonarCloud](https://marketplace.visualstudio.com/items?itemName=SonarSource.sonarcloud) marketplace extensions.  Enable this option to run [SonarQube or SonarCloud analysis](http://redirect.sonarsource.com/doc/install-configure-scanner-tfs-ts.html) after executing goals in the **Goals** field. The **install** or **package** goal should run first. You must also add a **Prepare Analysis Configuration** task from one of the extensions to the build definition before this Maven task.",
  "loc.input.label.sqMavenPluginVersionChoice": "SonarQube scanner for Maven version",
  "loc.input.help.sqMavenPluginVersionChoice": "The SonarQube Maven plugin version to use. You can use latest version, or rely on the version in your pom.xml.",
  "loc.input.label.checkstyleAnalysisEnabled": "运行 Checkstyle",
  "loc.input.help.checkstyleAnalysisEnabled": "使用默认 Sun 检查运行 Checkstyle 工具。将结果上传为生成项目。",
  "loc.input.label.pmdAnalysisEnabled": "运行 PMD",
  "loc.input.help.pmdAnalysisEnabled": "使用 PMD 静态分析工具查找代码中的 bug。结果将作为生成项目进行上传。",
  "loc.input.label.findbugsAnalysisEnabled": "运行 FindBugs",
  "loc.input.help.findbugsAnalysisEnabled": "使用 FindBugs 静态分析工具查找代码中的 bug。结果将作为生成项目进行上传。",
  "loc.messages.sqCommon_CreateTaskReport_MissingField": "未能创建 TaskReport 对象。缺少字段: %s",
  "loc.messages.sqCommon_WaitingForAnalysis": "正在等待 SonarQube 服务器分析生成。",
  "loc.messages.sqCommon_NotWaitingForAnalysis": "生成未配置等待 SonarQube 分析。详细的质量检验关状态不可用。",
  "loc.messages.sqCommon_QualityGateStatusUnknown": "无法检测质量检验关状态，或已引入新的状态。",
  "loc.messages.sqCommon_InvalidResponseFromServer": "从服务器返回了无效的或意外的响应格式。",
  "loc.messages.codeAnalysis_ToolIsEnabled": "%s 分析已启用。",
  "loc.messages.codeAnalysis_ToolFailed": "%s 分析失败。",
  "loc.messages.sqAnalysis_IncrementalMode": "检测到 PR 生成 - 在增量模式下运行 SonarQube 分析",
  "loc.messages.sqAnalysis_BuildSummaryTitle": "SonarQube 分析报表",
  "loc.messages.sqAnalysis_TaskReportInvalid": "任务报表无效或丢失。请检查 SonarQube 是否成功完成。",
  "loc.messages.sqAnalysis_BuildSummary_LinkText": "详细的 SonarQube 报表",
  "loc.messages.sqAnalysis_BuildSummary_CannotAuthenticate": "无法对 SonarQube 服务器进行验证。请查看已保存的终结点详细信息和该服务器的状态。",
  "loc.messages.sqAnalysis_AnalysisTimeout": "未在分配的时间(%d 秒)内完成分析。",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildSummary": "拉取请求生成: 详细的 SonarQube 生成摘要不可用。",
  "loc.messages.sqAnalysis_IsPullRequest_SkippingBuildBreaker": "拉取请求生成: 生成不会因质量检验关问题而断开。",
  "loc.messages.sqAnalysis_BuildBrokenDueToQualityGateFailure": "与此生成关联的 SonarQube 质量检验关出现问题。",
  "loc.messages.sqAnalysis_QualityGatePassed": "已通过与此生成关联的 SonarQube 质量检验关(状态 %s)",
  "loc.messages.sqAnalysis_UnknownComparatorString": "SonarQube 生成摘要遇到了问题: 未知的比较运算符“%s”",
  "loc.messages.sqAnalysis_NoUnitsFound": "无法从服务器检索 SonarQube 度量单位列表。",
  "loc.messages.sqAnalysis_NoReportTask": "无法找到 report-task.txt。可能的原因: SonarQube 分析未成功完成。",
  "loc.messages.sqAnalysis_MultipleReportTasks": "找到了多个 report-task.txt 文件。选择第一个文件。生成摘要和生成断裂可能不正确。可能的原因: 同一生成中存在多个 SonarQube 分析，这种情况不受支持。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsSomeFiles": "%s 发现 %d 个冲突存在于 %d 个文件中。",
  "loc.messages.codeAnalysisBuildSummaryLine_SomeViolationsOneFile": "%s 发现 %d 个冲突存在于 1 个文件中。",
  "loc.messages.codeAnalysisBuildSummaryLine_OneViolationOneFile": "%s 发现 1 个冲突存在于 1 个文件中。",
  "loc.messages.codeAnalysisBuildSummaryLine_NoViolations": "%s 未发现任何冲突。",
  "loc.messages.codeAnalysisBuildSummaryTitle": "代码分析报告",
  "loc.messages.codeAnalysisArtifactSummaryTitle": "代码分析结果",
  "loc.messages.codeAnalysisDisabled": "代码分析在生成环境外被禁用。无法找到 %s 的值",
  "loc.messages.LocateJVMBasedOnVersionAndArch": "为 Java %s %s 查找 JAVA_HOME",
  "loc.messages.FailedToLocateSpecifiedJVM": "Failed to find the specified JDK version. Please ensure the specified JDK version is installed on the agent and the environment variable '%s' exists and is set to the location of a corresponding JDK or use the [Java Tool Installer](https://docs.microsoft.com/en-us/vsts/build-release/tasks/tool/java-tool-installer) task to install the desired JDK.",
  "loc.messages.NoCodeCoverage": "未找到任何要发布的代码覆盖率结果。",
  "loc.messages.EntryAlreadyExists": "xml 文件中已存在源或储存库的设置。",
  "loc.messages.EffectivePomInvalid": "无法分析有效 POM。",
  "loc.messages.AuthenticationNotNecessary": "未找到需要进行身份验证的内置 Maven 源。禁用“对内置 Maven 源进行身份验证”以便更快生成。",
  "loc.messages.UsingAuthFeed": "使用内置源: "
}