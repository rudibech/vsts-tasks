{
  "loc.friendlyName": "Xcode",
  "loc.helpMarkDown": "[详细信息](https://go.microsoft.com/fwlink/?LinkID=613730)",
  "loc.description": "Build, test, or archive an Xcode workspace on macOS. Optionally package an app.",
  "loc.instanceNameFormat": "Xcode $(actions)",
  "loc.group.displayName.sign": "Signing & provisioning",
  "loc.group.displayName.package": "Package options",
  "loc.group.displayName.devices": "Devices & simulators",
  "loc.group.displayName.advanced": "高级",
  "loc.input.label.actions": "操作",
  "loc.input.help.actions": "Enter a space-delimited list of actions. Valid options are `build`, `clean`, `test`, `analyze`, and `archive`. For example,`clean build` will run a clean build. See the [xcodebuild man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html).",
  "loc.input.label.configuration": "配置",
  "loc.input.help.configuration": "Enter the Xcode project or workspace configuration to be built. The default value of this field is the variable `$(Configuration)`. When using a variable, make sure to specify a value (for example, `Release`) on the **Variables** tab.",
  "loc.input.label.sdk": "SDK",
  "loc.input.help.sdk": "Specify an SDK to use when building the Xcode project or workspace. From the macOS Terminal application, run `xcodebuild -showsdks` to display the valid list of SDKs. The default value of this field is the variable `$(SDK)`. When using a variable, make sure to specify a value (for example, `iphonesimulator`) on the **Variables** tab.",
  "loc.input.label.xcWorkspacePath": "Workspace or project path",
  "loc.input.help.xcWorkspacePath": "(可选)输入从存储库的根目录到 Xcode 工作区或项目的相对路径。例如，\"MyApp/MyApp.xcworkspace\" 或 \"MyApp/MyApp.xcodeproj\"。",
  "loc.input.label.scheme": "方案",
  "loc.input.help.scheme": "(可选)输入 Xcode 中定义的方案名称。它必须是共享方案，其“共享”<strong></strong>复选框已在 Xcode 中的“托管方案”<strong></strong>下启用。如果在上面指定“工作区或项目路径”<strong></strong>但未指定方案，并且工作区具有一个共享方案，则它将自动使用。",
  "loc.input.label.xcodeVersion": "Xcode version",
  "loc.input.help.xcodeVersion": "指定 Xcode 的目标版本。选择“默认”可在代理计算机上使用默认版本的 Xcode。选择版本号(例如 \"Xcode 9\")依赖于代理计算机上为版本位置(例如 \"XCODE_9_DEVELOPER_DIR=/Applications/Xcode_9.0.0.app/Contents/Developer\")设置的环境变量。选择“指定路径”可提供到 Xcode 开发人员目录的特定路径。",
  "loc.input.label.xcodeDeveloperDir": "Xcode developer path",
  "loc.input.help.xcodeDeveloperDir": "(可选)输入到特定 Xcode 开发人员目录的路径(例如 \"/Applications/Xcode_9.0.0.app/Contents/Developer\")。在代理计算机上安装多个版本的 Xcode 时，这非常有用。",
  "loc.input.label.packageApp": "Create app package",
  "loc.input.help.packageApp": "Indicate whether an IPA app package file should be generated as a part of the build.",
  "loc.input.label.archivePath": "Archive path",
  "loc.input.help.archivePath": "(Optional) Specify a directory where created archives should be placed.",
  "loc.input.label.exportPath": "Export path",
  "loc.input.help.exportPath": "(Optional) Specify the destination for the product exported from the archive.",
  "loc.input.label.exportOptions": "Export options",
  "loc.input.help.exportOptions": "Select a way of providing options for exporting the archive. When the default value of `Automatic` is selected, the export method is automatically detected from the archive. Select `Plist` to specify a plist file containing export options. Select `Specify` to provide a specific **Export method** and **Team ID**.",
  "loc.input.label.exportMethod": "Export method",
  "loc.input.help.exportMethod": "Enter the method that Xcode should use to export the archive. For example: `app-store`, `package`, `ad-hoc`, `enterprise`, or `development`.",
  "loc.input.label.exportTeamId": "团队 ID",
  "loc.input.help.exportTeamId": "(Optional) Enter the 10-character team ID from the Apple Developer Portal to use during export.",
  "loc.input.label.exportOptionsPlist": "Export options plist",
  "loc.input.help.exportOptionsPlist": "Enter the path to the plist file that contains options to use during export.",
  "loc.input.label.exportArgs": "Export arguments",
  "loc.input.help.exportArgs": "(Optional) Enter additional command line arguments to be used during export.",
  "loc.input.label.signingOption": "Signing style",
  "loc.input.help.signingOption": "Choose the method of signing the build. Select `Do not code sign` to disable signing. Select `Project defaults` to use only the project's signing configuration. Select `Manual signing` to force manual signing and optionally specify a signing identity and provisioning profile. Select `Automatic signing` to force automatic signing and optionally specify a development team ID. If your project requires signing, use the \"Install Apple...\" tasks to install certificates and provisioning profiles prior to the Xcode build.",
  "loc.input.label.signingIdentity": "Signing identity",
  "loc.input.help.signingIdentity": "(Optional) Enter a signing identity override with which to sign the build. This may require unlocking the default keychain on the agent machine. If no value is entered, the Xcode project's setting will be used.",
  "loc.input.label.provisioningProfileUuid": "Provisioning profile UUID",
  "loc.input.help.provisioningProfileUuid": "(Optional) Enter the UUID of an installed provisioning profile to be used for this build. Use separate build tasks with different schemes or targets to specify separate provisioning profiles by target in a single workspace (iOS, tvOS, watchOS).",
  "loc.input.label.teamId": "团队 ID",
  "loc.input.help.teamId": "(Optional, unless you are a member of multiple development teams.) Specify the 10-character development team ID.",
  "loc.input.label.destinationPlatformOption": "Destination platform",
  "loc.input.help.destinationPlatformOption": "Select the destination device's platform to be used for UI testing when the generic build device isn't valid. Choose `Custom` to specify a platform not included in this list. When `Default` is selected, no simulators nor devices will be targeted.",
  "loc.input.label.destinationPlatform": "Custom destination platform",
  "loc.input.help.destinationPlatform": "Enter a destination device's platform to be used for UI testing when the generic build device isn't valid.",
  "loc.input.label.destinationTypeOption": "Destination type",
  "loc.input.help.destinationTypeOption": "Choose the destination type to be used for UI testing. Devices must be connected to the Mac performing the build via a cable or network connection. See <strong>Devices and Simulators</strong> in Xcode.",
  "loc.input.label.destinationSimulators": "Simulator",
  "loc.input.help.destinationSimulators": "Enter an Xcode simulator name to be used for UI testing. For example, enter `iPhone X` (iOS and watchOS) or `Apple TV 4K` (tvOS). A target OS version is optional and can be specified in the format 'OS=<i>versionNumber</i>', such as `iPhone X,OS=11.1`. A list of simulators installed on the <strong>Hosted macOS Preview</strong> agent can be [found here](https://docs.microsoft.com/en-us/mobile-center/build/software).",
  "loc.input.label.destinationDevices": "Device",
  "loc.input.help.destinationDevices": "Enter the name of the device to be used for UI testing, such as `Raisa's iPad`.",
  "loc.input.label.args": "参数",
  "loc.input.help.args": "(Optional) Enter additional command line arguments with which to build. This is useful for specifying `-target` or `-project` arguments instead of specifying a workspace/project and scheme. See the [xcodebuild man page](https://developer.apple.com/library/mac/documentation/Darwin/Reference/ManPages/man1/xcodebuild.1.html).",
  "loc.input.label.cwd": "工作目录",
  "loc.input.help.cwd": "(Optional) Enter the working directory in which to run the build. If no value is entered, the root of the repository will be used.",
  "loc.input.label.outputPattern": "Output directory",
  "loc.input.help.outputPattern": "(Optional) Enter a path relative to the working directory where build output (binaries) will be placed. Examples: `output/$(SDK)/$(Configuration)` or `output/$(TestSDK)/$(TestConfiguration)`. Archive and export paths are configured separately.",
  "loc.input.label.useXcpretty": "使用 xcpretty",
  "loc.input.help.useXcpretty": "Specify whether to use xcpretty to format xcodebuild output and generate JUnit test results. Enabling this requires xcpretty to be installed on the agent machine. It is preinstalled on VSTS hosted build agents. See [xcpretty](https://github.com/supermarin/xcpretty) on GitHub.",
  "loc.input.label.publishJUnitResults": "Publish test results to VSTS/TFS",
  "loc.input.help.publishJUnitResults": "If xcpretty is enabled above, specify whether to publish JUnit test results to VSTS/TFS.",
  "loc.messages.SignIdNotFound": "Failed to find the iOS signing identity. Verify that signing and provisioning information is provided.",
  "loc.messages.TempKeychainSetupFailed": "未能将临时密钥链添加到密钥链搜索路径。",
  "loc.messages.ProvProfileDetailsNotFound": "Failed to find details for the provisioning profile: %s",
  "loc.messages.ProvProfileUUIDNotFound": "Failed to find the UUID for provisioning profile: %s",
  "loc.messages.MultipleWorkspacesFound": "Multiple Xcode workspace matches were found. The first match will be used: %s",
  "loc.messages.WorkspaceDoesNotExist": "The Xcode workspace was specified, but it does not exist or is not a directory: %s",
  "loc.messages.UseXcprettyForTestPublishing": "When using xcodebuild, enable `Use xcpretty` to publish test results. For this build, no test results will be published.",
  "loc.messages.NoTestResultsFound": "No test result files matching `%s` were found. Publishing JUnit test results will be skipped.",
  "loc.messages.XcodeSuccess": "Xcode 任务执行完成，没有错误。",
  "loc.messages.TempKeychainDeleteFailed": "Failed to delete the temporary keychain created during the build: `%s`",
  "loc.messages.ProvProfileDeleteFailed": "Failed to delete the provisioning profile `%s`.",
  "loc.messages.ExportMethodNotIdentified": "Failed to automatically identify the export method to use from the archive file. This might cause errors during the build or produce an invalid package. If export fails, either enable signing (set `Signing Style` to `Project Defaults`), or configure export manually (set `Export options` to `Plist` or `Specify`).",
  "loc.messages.ExportOptionsPlistInvalidFilePath": "The `Export options` plist file does not exist at `%s`. Provide the path to a valid plist file.",
  "loc.messages.SchemeRequiredForArchive": "The scheme must be specified to generate the package with xcodebuild archive and export.",
  "loc.messages.WorkspaceOrProjectRequiredForArchive": "The workspace or project path must be specified to generate the package with xcodebuild archive and export.",
  "loc.messages.FailedToGenerateExportOptionsPlist": "Failed to automatically generate an `Export options` plist file to export an IPA. Please specify an `Export options` plist file in `Package options`.",
  "loc.messages.LocateXcodeBasedOnVersion": "Locating the developer path for Xcode `%s`",
  "loc.messages.FailedToLocateSpecifiedXcode": "Unable to resolve the developer path for Xcode `%s`. Set the `%s` environment variable on the agent machine, or set `Xcode version` to `Default` or `Specify path`.",
  "loc.messages.CantDetermineProvisioningStyle": "The provisioning style was not found in a pbxProject file. Automatic signing will be used. If the project uses manual signing, auto-export may fail. As a workaround, `Export options` can be set to `Plist` or `Specify`.",
  "loc.messages.MultipleSchemesFound": "The workspace contains multiple schemes. No scheme selected. Use `Scheme` to specify a target scheme.",
  "loc.messages.NoSchemeFound": "No shared scheme found in the workspace. Use \"Manage Schemes\" in Xcode to share a scheme.",
  "loc.messages.SchemeSelected": "The workspace contains a single shared scheme. '%s' will be used.",
  "loc.messages.FailedToFindScheme": "Failed to find a scheme in the workspace. Use `Scheme` to specify a target scheme.",
  "loc.messages.OutputDirectoryIgnored": "Output directory for build output (binaries) ignored. Specifying an output directory is incompatible with the '%s' action."
}